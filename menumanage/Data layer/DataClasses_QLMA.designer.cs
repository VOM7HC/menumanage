#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Data_layer
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="QLMA")]
	public partial class DataClasses_QLMADataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertMonAn(MonAn instance);
    partial void UpdateMonAn(MonAn instance);
    partial void DeleteMonAn(MonAn instance);
    partial void InsertNhomMonAn(NhomMonAn instance);
    partial void UpdateNhomMonAn(NhomMonAn instance);
    partial void DeleteNhomMonAn(NhomMonAn instance);
    #endregion
		
		public DataClasses_QLMADataContext() : 
				base(global::Data_layer.Properties.Settings.Default.QLMAConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses_QLMADataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses_QLMADataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses_QLMADataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses_QLMADataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<MonAn> MonAns
		{
			get
			{
				return this.GetTable<MonAn>();
			}
		}
		
		public System.Data.Linq.Table<NhomMonAn> NhomMonAns
		{
			get
			{
				return this.GetTable<NhomMonAn>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MonAn")]
	public partial class MonAn : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _maMonAn;
		
		private string _tenMonAn;
		
		private string _donViTinh;
		
		private System.Nullable<decimal> _donGia;
		
		private string _ghiChu;
		
		private System.Nullable<int> _maNhom;
		
		private EntityRef<NhomMonAn> _NhomMonAn;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnmaMonAnChanging(string value);
    partial void OnmaMonAnChanged();
    partial void OntenMonAnChanging(string value);
    partial void OntenMonAnChanged();
    partial void OndonViTinhChanging(string value);
    partial void OndonViTinhChanged();
    partial void OndonGiaChanging(System.Nullable<decimal> value);
    partial void OndonGiaChanged();
    partial void OnghiChuChanging(string value);
    partial void OnghiChuChanged();
    partial void OnmaNhomChanging(System.Nullable<int> value);
    partial void OnmaNhomChanged();
    #endregion
		
		public MonAn()
		{
			this._NhomMonAn = default(EntityRef<NhomMonAn>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_maMonAn", DbType="NChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string maMonAn
		{
			get
			{
				return this._maMonAn;
			}
			set
			{
				if ((this._maMonAn != value))
				{
					this.OnmaMonAnChanging(value);
					this.SendPropertyChanging();
					this._maMonAn = value;
					this.SendPropertyChanged("maMonAn");
					this.OnmaMonAnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_tenMonAn", DbType="NVarChar(50)")]
		public string tenMonAn
		{
			get
			{
				return this._tenMonAn;
			}
			set
			{
				if ((this._tenMonAn != value))
				{
					this.OntenMonAnChanging(value);
					this.SendPropertyChanging();
					this._tenMonAn = value;
					this.SendPropertyChanged("tenMonAn");
					this.OntenMonAnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_donViTinh", DbType="NVarChar(50)")]
		public string donViTinh
		{
			get
			{
				return this._donViTinh;
			}
			set
			{
				if ((this._donViTinh != value))
				{
					this.OndonViTinhChanging(value);
					this.SendPropertyChanging();
					this._donViTinh = value;
					this.SendPropertyChanged("donViTinh");
					this.OndonViTinhChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_donGia", DbType="Decimal(18,0)")]
		public System.Nullable<decimal> donGia
		{
			get
			{
				return this._donGia;
			}
			set
			{
				if ((this._donGia != value))
				{
					this.OndonGiaChanging(value);
					this.SendPropertyChanging();
					this._donGia = value;
					this.SendPropertyChanged("donGia");
					this.OndonGiaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ghiChu", DbType="NVarChar(255)")]
		public string ghiChu
		{
			get
			{
				return this._ghiChu;
			}
			set
			{
				if ((this._ghiChu != value))
				{
					this.OnghiChuChanging(value);
					this.SendPropertyChanging();
					this._ghiChu = value;
					this.SendPropertyChanged("ghiChu");
					this.OnghiChuChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_maNhom", DbType="Int")]
		public System.Nullable<int> maNhom
		{
			get
			{
				return this._maNhom;
			}
			set
			{
				if ((this._maNhom != value))
				{
					if (this._NhomMonAn.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnmaNhomChanging(value);
					this.SendPropertyChanging();
					this._maNhom = value;
					this.SendPropertyChanged("maNhom");
					this.OnmaNhomChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NhomMonAn_MonAn", Storage="_NhomMonAn", ThisKey="maNhom", OtherKey="maNhom", IsForeignKey=true, DeleteRule="CASCADE")]
		public NhomMonAn NhomMonAn
		{
			get
			{
				return this._NhomMonAn.Entity;
			}
			set
			{
				NhomMonAn previousValue = this._NhomMonAn.Entity;
				if (((previousValue != value) 
							|| (this._NhomMonAn.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._NhomMonAn.Entity = null;
						previousValue.MonAns.Remove(this);
					}
					this._NhomMonAn.Entity = value;
					if ((value != null))
					{
						value.MonAns.Add(this);
						this._maNhom = value.maNhom;
					}
					else
					{
						this._maNhom = default(Nullable<int>);
					}
					this.SendPropertyChanged("NhomMonAn");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.NhomMonAn")]
	public partial class NhomMonAn : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _maNhom;
		
		private string _tenNhom;
		
		private EntitySet<MonAn> _MonAns;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnmaNhomChanging(int value);
    partial void OnmaNhomChanged();
    partial void OntenNhomChanging(string value);
    partial void OntenNhomChanged();
    #endregion
		
		public NhomMonAn()
		{
			this._MonAns = new EntitySet<MonAn>(new Action<MonAn>(this.attach_MonAns), new Action<MonAn>(this.detach_MonAns));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_maNhom", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int maNhom
		{
			get
			{
				return this._maNhom;
			}
			set
			{
				if ((this._maNhom != value))
				{
					this.OnmaNhomChanging(value);
					this.SendPropertyChanging();
					this._maNhom = value;
					this.SendPropertyChanged("maNhom");
					this.OnmaNhomChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_tenNhom", DbType="NVarChar(255)")]
		public string tenNhom
		{
			get
			{
				return this._tenNhom;
			}
			set
			{
				if ((this._tenNhom != value))
				{
					this.OntenNhomChanging(value);
					this.SendPropertyChanging();
					this._tenNhom = value;
					this.SendPropertyChanged("tenNhom");
					this.OntenNhomChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NhomMonAn_MonAn", Storage="_MonAns", ThisKey="maNhom", OtherKey="maNhom")]
		public EntitySet<MonAn> MonAns
		{
			get
			{
				return this._MonAns;
			}
			set
			{
				this._MonAns.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_MonAns(MonAn entity)
		{
			this.SendPropertyChanging();
			entity.NhomMonAn = this;
		}
		
		private void detach_MonAns(MonAn entity)
		{
			this.SendPropertyChanging();
			entity.NhomMonAn = null;
		}
	}
}
#pragma warning restore 1591
